searchState.loadedDescShard("zink", 0, "Zink library for developing smart contracts for …\nTypes implemented this trait are able to be pushed on …\nZink event interface\nEvent logging interface\nAssembly trait implementation.\nCheck and expression and revert with the input message\nMark the function as an external entry point.\nZink FFI.\nGenerate a keccak hash of the input (sha3)\nZink primitive types\nPush self on the stack.\nRevert with the input message\nZink storage implementation.\nDeclare on-chain storage\nConvert bytes to ls bytes\nDeclare transient storage (cleared after each transaction)\nTypes implemented this trait are able to be pushed on …\nPush self on the stack.\nZink event interface\nAssembly FFI.\nBytes based instructions\nEmit ABI to host state.\nEVM FFI.\nSet up a label for reserving 32 bytes in memory\nSet up a label for reserving 64 bytes in memory\nEqual operation for addresses\nAddmod operation for addresses\nLess than operation for addresses\nEqual operation for addresses\nEqual operation for addresses\nEqual operation for addresses\nEmit opcode ADDMOD\nEmit opcode ADDMOD\nEmit opcode ADDMOD\nEmit opcode ADDMOD\nEmit opcode ADDMOD\nEmit opcode ADDMOD\nEmit opcode ADDMOD\nEmit opcode ADDMOD\nEmit opcode ADDMOD\nEmit opcode ADDMOD\nEmit opcode ADDMOD\nEmit opcode ADDMOD\nEmit opcode ADDMOD\nEmit opcode ADDMOD\nEmit opcode ADDMOD\nEmit opcode ADDMOD\nPush a 16-bit signed integer to the stack.\nPush a 32-bit signed integer to the stack.\nPush a 64-bit signed integer to the stack.\nPush a 8-bit signed integer to the stack.\nPush a 16-bit unsigned integer to the stack.\nPush a 32-bit unsigned integer to the stack.\nPush a 64-bit unsigned integer to the stack.\nPush a 8-bit unsigned integer to the stack.\nRevert with message in 32 bytes\nRevert with message in 64 bytes\nRevert with message in 96 bytes\nRevert with message in 128 bytes\nLoad a 16-bit signed integer from the storage.\nLoad a 32-bit signed integer from the storage.\nLoad a 64-bit signed integer from the storage.\nLoad a 8-bit signed integer from the storage.\nLoad a 16-bit unsigned integer from the storage.\nLoad a 32-bit unsigned integer from the storage.\nLoad a 64-bit unsigned integer from the storage.\nLoad a 8-bit unsigned integer from the storage.\nLoad a 16-bit signed integer from the transient storage.\nLoad a 32-bit signed integer from the transient storage.\nLoad a 64-bit signed integer from the transient storage.\nLoad a 8-bit signed integer from the transient storage.\nLoad a 16-bit unsigned integer from the transient storage.\nLoad a 32-bit unsigned integer from the transient storage.\nLoad a 64-bit unsigned integer from the transient storage.\nLoad a 8-bit unsigned integer from the transient storage.\nStore a 16-bit signed integer to the transient storage.\nStore a 32-bit signed integer to the transient storage.\nStore a 64-bit signed integer to the transient storage.\nStore a 8-bit signed integer to the transient storage.\nStore a 16-bit unsigned integer to the transient storage.\nStore a 32-bit unsigned integer to the transient storage.\nStore a 64-bit unsigned integer to the transient storage.\nStore a 8-bit unsigned integer to the transient storage.\nCheck equal for bytes10\nCheck equal for bytes11\nCheck equal for bytes12\nCheck equal for bytes13\nCheck equal for bytes14\nCheck equal for bytes15\nCheck equal for bytes16\nCheck equal for bytes17\nCheck equal for bytes18\nCheck equal for bytes19\nCheck equal for bytes20\nCheck equal for bytes21\nCheck equal for bytes22\nCheck equal for bytes23\nCheck equal for bytes24\nCheck equal for bytes25\nCheck equal for bytes26\nCheck equal for bytes27\nCheck equal for bytes28\nCheck equal for bytes29\nCheck equal for bytes2\nCheck equal for bytes30\nCheck equal for bytes31\nCheck equal for bytes32\nCheck equal for bytes3\nCheck equal for bytes4\nCheck equal for bytes5\nCheck equal for bytes6\nCheck equal for bytes7\nCheck equal for bytes8\nCheck equal for bytes9\nPush 10 bytes to stack\nPush 11 bytes to stack\nPush 12 bytes to stack\nPush 13 bytes to stack\nPush 14 bytes to stack\nPush 15 bytes to stack\nPush 16 bytes to stack\nPush 17 bytes to stack\nPush 18 bytes to stack\nPush 19 bytes to stack\nPush 2 bytes to stack\nPush 20 bytes to stack\nPush 21 bytes to stack\nPush 22 bytes to stack\nPush 23 bytes to stack\nPush 24 bytes to stack\nPush 25 bytes to stack\nPush 26 bytes to stack\nPush 27 bytes to stack\nPush 28 bytes to stack\nPush 29 bytes to stack\nPush 3 bytes to stack\nPush 30 bytes to stack\nPush 31 bytes to stack\nPush 32 bytes to stack\nPush 4 bytes to stack\nPush 5 bytes to stack\nPush 6 bytes to stack\nPush 7 bytes to stack\nPush 8 bytes to stack\nPush 9 bytes to stack\nLoad 10 bytes from storage\nLoad 11 bytes from storage\nLoad 12 bytes from storage\nLoad 13 bytes from storage\nLoad 14 bytes from storage\nLoad 15 bytes from storage\nLoad 16 bytes from storage\nLoad 17 bytes from storage\nLoad 18 bytes from storage\nLoad 19 bytes from storage\nLoad 2 bytes from storage\nLoad 20 bytes from storage\nLoad 21 bytes from storage\nLoad 22 bytes from storage\nLoad 23 bytes from storage\nLoad 24 bytes from storage\nLoad 25 bytes from storage\nLoad 26 bytes from storage\nLoad 27 bytes from storage\nLoad 28 bytes from storage\nLoad 29 bytes from storage\nLoad 3 bytes from storage\nLoad 30 bytes from storage\nLoad 31 bytes from storage\nLoad 32 bytes from storage\nLoad 4 bytes from storage\nLoad 5 bytes from storage\nLoad 6 bytes from storage\nLoad 7 bytes from storage\nLoad 8 bytes from storage\nLoad 9 bytes from storage\nTLoad 10 bytes from transient storage\nTLoad 11 bytes from transient storage\nTLoad 12 bytes from transient storage\nTLoad 13 bytes from transient storage\nTLoad 14 bytes from transient storage\nTLoad 15 bytes from transient storage\nTLoad 16 bytes from transient storage\nTLoad 17 bytes from transient storage\nTLoad 18 bytes from transient storage\nTLoad 19 bytes from transient storage\nTLoad 2 bytes from transient storage\nTLoad 20 bytes from transient storage\nTLoad 21 bytes from transient storage\nTLoad 22 bytes from transient storage\nTLoad 23 bytes from transient storage\nTLoad 24 bytes from transient storage\nTLoad 25 bytes from transient storage\nTLoad 26 bytes from transient storage\nTLoad 27 bytes from transient storage\nTLoad 28 bytes from transient storage\nTLoad 29 bytes from transient storage\nTLoad 3 bytes from transient storage\nTLoad 30 bytes from transient storage\nTLoad 31 bytes from transient storage\nTLoad 32 bytes from transient storage\nTLoad 4 bytes from transient storage\nTLoad 5 bytes from transient storage\nTLoad 6 bytes from transient storage\nTLoad 7 bytes from transient storage\nTLoad 8 bytes from transient storage\nTLoad 9 bytes from transient storage\nGet the current blob base fee\nGet the current blob hash at index\nGet the current message sender\nCompute Keccak-256 hash\nAppend log record with no topics\nAppend log record with one topic\nAppend log record with two topics\nAppend log record with three topics\nAppend log record with four topics\nCopy memory to memory\nLoad word from memory\nSave word to memory\nSave byte to memory\nPush 1 byte to the stack.\nPush 1 byte to the stack.\nPush 10 bytes to the stack.\nPush 11 bytes to the stack.\nPush 12 bytes to the stack.\nPush 13 bytes to the stack.\nPush 14 bytes to the stack.\nPush 15 bytes to the stack.\nPush 16 bytes to the stack.\nPush 17 bytes to the stack.\nPush 18 bytes to the stack.\nPush 19 bytes to the stack.\nPush 2 bytes to the stack.\nPush 20 bytes to the stack.\nPush 21 bytes to the stack.\nPush 22 bytes to the stack.\nPush 23 bytes to the stack.\nPush 24 bytes to the stack.\nPush 25 bytes to the stack.\nPush 26 bytes to the stack.\nPush 27 bytes to the stack.\nPush 28 bytes to the stack.\nPush 29 bytes to the stack.\nPush 3 bytes to the stack.\nPush 30 bytes to the stack.\nPush 31 bytes to the stack.\nPush 32 bytes to the stack.\nPush 4 bytes to the stack.\nPush 5 bytes to the stack.\nPush 6 bytes to the stack.\nPush 7 bytes to the stack.\nPush 8 bytes to the stack.\nPush 9 bytes to the stack.\nLoad a value from the storage\nStore a value in the storage\nLoad a value from the transient storage\nStore a value in the transient storage\nAccount address\nAccount address\nFixed bytes\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAccount address\nReturns empty address\nReturns empty address\nif self equal to another\nif self equal to another\nif self equal to another\nif self equal to another\nif self equal to another\nif self equal to another\nif self equal to another\nif self equal to another\nif self equal to another\nif self equal to another\nif self equal to another\nif self equal to another\nif self equal to another\nif self equal to another\nif self equal to another\nif self equal to another\nif self equal to another\nif self equal to another\nif self equal to another\nif self equal to another\nif self equal to another\nif self equal to another\nif self equal to another\nif self equal to another\nif self equal to another\nif self equal to another\nif self equal to another\nif self equal to another\nif self equal to another\nif self equal to another\nif self equal to another\nif self equal to another\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA trait for modular arithmetic operations on numeric types.\nAccount address\nu256 add\nAddmod for U256\nU256 to bytes32\nReturns empty value\nu256 eq\nu256 less than\nmax of u256\nMulmod for U256\nu256 sub\nStorage mapping interface\nTransient storage mapping interface\nStorage mapping interface\nStorage trait. Currently not for public use\nInterface for the value of kv based storage\nTransient storage mapping interface\nTransient storage trait. Currently not for public use\nInterface for the value of kv based transient storage\nDouble key mapping\nGet value from storage key.\nGet value from transient storage key.\nGet value from storage key.\nGet value from transient storage key.\nGet value from storage.\nGet value from transient storage.\nStorage Mapping\nSet key and value\nSet key and value in transient storage\nSet key and value\nSet key and value in transient storage\nSet value to storage.\nSet value to transient storage.\nLoad from storage\nLoad from transient storage\nKey-Value storage\nStorage mapping interface\nTransient storage mapping interface\nGet value from storage key.\nGet value from transient storage key.\nLoad storage key to stack\nSet key and value\nSet key and value in transient storage\nStorage mapping interface\nTransient storage mapping interface\nGet value from storage key.\nGet value from transient storage key.\nLoad storage key to stack\nSet key and value\nSet key and value in transient storage\nStorage trait. Currently not for public use\nTransient storage trait. Currently not for public use\nGet value from storage.\nGet value from transient storage.\nSet value to storage.\nSet value to transient storage.")