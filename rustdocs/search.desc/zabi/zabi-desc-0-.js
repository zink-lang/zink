searchState.loadedDescShard("zabi", 0, "Zink ABI implementation\nFunction ABI.\nABI decode a value\nABI encode a value\nErrors that can occur during ABI decoding\nZink ABI implementation\nDecode a value from Ethereum ABI encoded bytes\nEncode the value according to Ethereum ABI rules\nABI encoding and decoding functionality for Ethereum ABI.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert hex string to <code>Abi</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAbi results\nZink ABI utils\nConvert <code>Abi</code> to hex string.\nFunction ABI.\nConvert bytes to <code>Abi</code>.\nGet function selector.\nGet function signature.\nConvert <code>Abi</code> to bytes.\nABI decode a value\nABI encode a value\nErrors that can occur during ABI decoding\nDecode a value from Ethereum ABI encoded bytes\nEncode the value according to Ethereum ABI rules\nDecode an address from ABI-encoded data\nDecode a U256 from ABI-encoded data\nEncode an address (20 bytes) into ABI format\nEncode a U256 (32 bytes) into ABI format\nContains the error value\nABI error\nFailed to decode from hex.\nContains the success value\nFailed to encode or decode with postcard.\nABI result\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nGenerate a keccak hash of the input (sha3)\nParse selector from bytes.")